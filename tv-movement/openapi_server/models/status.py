# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class Status(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ready=None):  # noqa: E501
        """Status - a model defined in OpenAPI

        :param ready: The ready of this Status.  # noqa: E501
        :type ready: bool
        """
        self.openapi_types = {
            'ready': bool
        }

        self.attribute_map = {
            'ready': 'ready'
        }

        self._ready = ready

    @classmethod
    def from_dict(cls, dikt) -> 'Status':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Status of this Status.  # noqa: E501
        :rtype: Status
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ready(self):
        """Gets the ready of this Status.


        :return: The ready of this Status.
        :rtype: bool
        """
        return self._ready

    @ready.setter
    def ready(self, ready):
        """Sets the ready of this Status.


        :param ready: The ready of this Status.
        :type ready: bool
        """
        if ready is None:
            raise ValueError("Invalid value for `ready`, must not be `None`")  # noqa: E501

        self._ready = ready
